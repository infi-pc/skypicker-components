.xx{color:#f00}

/*# sourceMappingURL=data:application/json;base64,{"version":3,"sources":["C:\\www\\whichairline\\proj\\document_root\\css\\styl\\widgets\\price-calendar.styl","C:\\www\\whichairline\\proj\\document_root\\node_modules\\grunt-contrib-stylus\\node_modules\\stylus\\lib\\functions\\index.styl"],"names":[],"mappings":"AAAA,AAEA,ACFA","file":"bundle.css","sourcesContent":[".xx\n\tcolor red\n","vendors = moz webkit o ms official\r\n\r\n// stringify the given arg\r\n\r\n-string(arg)\r\n  type(arg) + ' ' + arg\r\n\r\n// require a color\r\n\r\nrequire-color(color)\r\n  unless color is a 'color'\r\n    error('RGB or HSL value expected, got a ' + -string(color))\r\n\r\n// require a unit\r\n\r\nrequire-unit(n)\r\n  unless n is a 'unit'\r\n    error('unit expected, got a ' + -string(n))\r\n\r\n// require a string\r\n\r\nrequire-string(str)\r\n  unless str is a 'string' or str is a 'ident'\r\n    error('string expected, got a ' + -string(str))\r\n\r\n// apply js Math function\r\n\r\nmath(n, fn)\r\n  require-unit(n)\r\n  require-string(fn)\r\n  -math(n, fn)\r\n\r\n// adjust the given color's property by amount\r\n\r\nadjust(color, prop, amount)\r\n  require-color(color)\r\n  require-string(prop)\r\n  require-unit(amount)\r\n  -adjust(color, prop, amount)\r\n\r\n// Math functions\r\n\r\nabs(n) { math(n, 'abs') }\r\nmin(a, b) { a < b ? a : b }\r\nmax(a, b) { a > b ? a : b }\r\n\r\n// Trigonometrics\r\nPI = -math-prop('PI')\r\n\r\nradians-to-degrees(angle)\r\n  angle * (180 / PI)\r\n\r\ndegrees-to-radians(angle)\r\n  unit(angle * (PI / 180),'')\r\n\r\nsin(n)\r\n  n = degrees-to-radians(n) if unit(n) == 'deg'\r\n  round(math(n, 'sin'), 9)\r\n\r\ncos(n)\r\n  n = degrees-to-radians(n) if unit(n) == 'deg'\r\n  round(math(n, 'cos'), 9)\r\n\r\ntan(n)\r\n  round(sin(n) / cos(n), 9)\r\n\r\n// Rounding Math functions\r\n\r\nceil(n, precision = 0)\r\n  multiplier = 10 ** precision\r\n  math(n * multiplier, 'ceil') / multiplier\r\n\r\nfloor(n, precision = 0)\r\n  multiplier = 10 ** precision\r\n  math(n * multiplier, 'floor') / multiplier\r\n\r\nround(n, precision = 0)\r\n  multiplier = 10 ** precision\r\n  math(n * multiplier, 'round') / multiplier\r\n\r\n// return the sum of the given numbers\r\n\r\nsum(nums)\r\n  sum = 0\r\n  sum += n for n in nums\r\n\r\n// return the average of the given numbers\r\n\r\navg(nums)\r\n  sum(nums) / length(nums)\r\n\r\n// return a unitless number, or pass through\r\n\r\nremove-unit(n)\r\n  if typeof(n) is \"unit\"\r\n    unit(n, \"\")\r\n  else\r\n    n\r\n\r\n// convert a percent to a decimal, or pass through\r\n\r\npercent-to-decimal(n)\r\n  if unit(n) is \"%\"\r\n    remove-unit(n) / 100\r\n  else\r\n    n\r\n\r\n// color components\r\n\r\nalpha(color) { component(hsl(color), 'alpha') }\r\nhue(color) { component(hsl(color), 'hue') }\r\nsaturation(color) { component(hsl(color), 'saturation') }\r\nlightness(color) { component(hsl(color), 'lightness') }\r\n\r\n// check if n is an odd number\r\n\r\nodd(n)\r\n  1 == n % 2\r\n\r\n// check if n is an even number\r\n\r\neven(n)\r\n  0 == n % 2\r\n\r\n// check if color is light\r\n\r\nlight(color)\r\n  lightness(color) >= 50%\r\n\r\n// check if color is dark\r\n\r\ndark(color)\r\n  lightness(color) < 50%\r\n\r\n// desaturate color by amount\r\n\r\ndesaturate(color, amount)\r\n  adjust(color, 'saturation', - amount)\r\n\r\n// saturate color by amount\r\n\r\nsaturate(color = '', amount = 100%)\r\n  if color is a 'color'\r\n    adjust(color, 'saturation', amount)\r\n  else\r\n    unquote( \"saturate(\" + color + \")\" )\r\n\r\n// darken by the given amount\r\n\r\ndarken(color, amount)\r\n  adjust(color, 'lightness', - amount)\r\n\r\n// lighten by the given amount\r\n\r\nlighten(color, amount)\r\n  adjust(color, 'lightness', amount)\r\n\r\n// decerase opacity by amount\r\n\r\nfade-out(color, amount)\r\n  color - rgba(black, percent-to-decimal(amount))\r\n\r\n// increase opacity by amount\r\n\r\nfade-in(color, amount)\r\n  color + rgba(black, percent-to-decimal(amount))\r\n\r\n// spin hue by a given amount\r\n\r\nspin(color, amount)\r\n  color + unit(amount, deg)\r\n\r\n// mix two colors by a given amount\r\n\r\nmix(color1, color2, weight = 50%)\r\n  unless weight in 0..100\r\n    error(\"Weight must be between 0% and 100%\")\r\n\r\n  if length(color1) == 2\r\n    weight = color1[0]\r\n    color1 = color1[1]\r\n\r\n  else if length(color2) == 2\r\n    weight = 100 - color2[0]\r\n    color2 = color2[1]\r\n\r\n  require-color(color1)\r\n  require-color(color2)\r\n\r\n  p = unit(weight / 100, '')\r\n  w = p * 2 - 1\r\n\r\n  a = alpha(color1) - alpha(color2)\r\n\r\n  w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2\r\n  w2 = 1 - w1\r\n\r\n  channels = (red(color1) red(color2)) (green(color1) green(color2)) (blue(color1) blue(color2))\r\n  rgb = ()\r\n\r\n  for pair in channels\r\n    push(rgb, floor(pair[0] * w1 + pair[1] * w2))\r\n\r\n  a1 = alpha(color1) * p\r\n  a2 = alpha(color1) * (1 - p)\r\n  alpha = a1 + a2\r\n\r\n  rgba(rgb[0], rgb[1], rgb[2], alpha)\r\n\r\n// invert colors, leave alpha intact\r\n\r\ninvert(color = '')\r\n  if color is a 'color'\r\n    r = 255 - red(color)\r\n    g = 255 - green(color)\r\n    b = 255 - blue(color)\r\n    rgba(r,g,b,alpha(color))\r\n  else\r\n    unquote( \"invert(\" + color + \")\" )\r\n\r\n// give complement of the given color\r\n\r\ncomplement( color )\r\n  spin( color, 180 )\r\n\r\n// give grayscale of the given color\r\n\r\ngrayscale( color = '' )\r\n  if color is a 'color'\r\n    desaturate( color, 100% )\r\n  else\r\n    unquote( \"grayscale(\" + color + \")\" )\r\n\r\n// mix the given color with white\r\n\r\ntint( color, percent )\r\n  mix( white, color, percent )\r\n\r\n// mix the given color with black\r\n\r\nshade( color, percent )\r\n  mix( black, color, percent )\r\n\r\n// return the last value in the given expr\r\n\r\nlast(expr)\r\n  expr[length(expr) - 1]\r\n\r\n// return keys in the given pairs or object\r\n\r\nkeys(pairs)\r\n  ret = ()\r\n  if type(pairs) == 'object'\r\n    for key in pairs\r\n      push(ret, key)\r\n  else\r\n    for pair in pairs\r\n      push(ret, pair[0]);\r\n  ret\r\n\r\n// return values in the given pairs or object\r\n\r\nvalues(pairs)\r\n  ret = ()\r\n  if type(pairs) == 'object'\r\n    for key, val in pairs\r\n      push(ret, val)\r\n  else\r\n    for pair in pairs\r\n      push(ret, pair[1]);\r\n  ret\r\n\r\n// join values with the given delimiter\r\n\r\njoin(delim, vals...)\r\n  buf = ''\r\n  vals = vals[0] if length(vals) == 1\r\n  for val, i in vals\r\n    buf += i ? delim + val : val\r\n\r\n// add a CSS rule to the containing block\r\n\r\n// - This definition allows add-property to be used as a mixin\r\n// - It has the same effect as interpolation but allows users\r\n//   to opt for a functional style\r\n\r\nadd-property-function = add-property\r\nadd-property(name, expr)\r\n  if mixin\r\n    {name} expr\r\n  else\r\n    add-property-function(name, expr)\r\n"]}*/